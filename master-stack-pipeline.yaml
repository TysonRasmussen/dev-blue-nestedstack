Parameters:
  EnvironmentName:
    Description: environment type (e.g. dev, stage, etc)
    Type: String
    Default: dev

  EnvironmentFlag:
    Description: environment flag (e.g. blue, green, etc)
    Type: String
    Default: blue

  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String
    Default: blank

  GitHubUser:
    Type: String


Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "cloudformation.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:*
                  - ecr:*
                  - iam:*
                  - s3:*


  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${BuildArtifactsBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudformation:*
                  - iam:PassRole

# CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
BuildArtifactsBucket:
    Type: AWS::S3::Bucket
CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'sts:AssumeRole'
                Effect: Allow
                Principal:
                  Service:
                    - codebuild.amazonaws.com
        Path: /
        Policies:
            - PolicyName: CodeBuildAccess
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Resource:
                      - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${GitHubRepo}_build'
                      - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${GitHubRepo}_build:*'
                    Action:
                      - 'logs:CreateLogGroup'
                      - 'logs:CreateLogStream'
                      - 'logs:PutLogEvents'
                  - Effect: Allow
                    Resource:
                      - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                    Action:
                      - 's3:GetObject'
                      - 's3:GetObjectVersion'
                      - 's3:PutObject'
CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub '${GitHubRepo}_build'
        Description: Build project for the Lambda service
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/eb-nodejs-4.4.6-amazonlinux-64:2.1.3
            EnvironmentVariables:
              - Name: BUILD_OUTPUT_BUCKET
                Value: !Ref BuildArtifactsBucket
        ServiceRole: !GetAtt CodeBuildServiceRole.Arn
        Source:
            Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BuildArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: NestedStack
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: NestedStack
              RunOrder: 1
            - Name: Build
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: 1
                  Configuration:
                    ProjectName: !Ref CodeBuildProject
                  InputArtifacts:
                    - Name: NestedStack
                  OutputArtifacts:
                    - Name: NestedStackZip
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: Deploy
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${EnvironmentName}-${EnvironmentFlag}-MasterStack"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: NestedStackZip::master.yaml
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                ParameterOverrides: !Sub |
                  {
                    "EnvironmentName": "${EnvironmentName}",
                    "EnvironmentFlag": "${EnvironmentFlag}",
                    "GitHubUser": "${GitHubUser}",
                    "GitHubRepo": "${GitHubRepo}",
                    "GitHubBranch": "${GitHubBranch}"
                  }
              InputArtifacts:
                - Name: App
              RunOrder: 1


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}

  BuildArtifactsBucket:
    Value: !Ref BuildArtifactsBucket
    Export:
      Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "BuildArtifactsBucket" ]]

Parameters:
  EnvironmentName:
    Description: environment type (e.g. dev, stage, etc)
    Type: String
    Default: dev

  EnvironmentFlag:
    Description: environment flag (e.g. blue, green, etc)
    Type: String
    Default: blue

  BuildArtifactsBucket:
    Description: existing s3 bucket, in this Region, to store build artifacts
    Type: String
    Default: ref-arch-msi

  BuildArtifactsBucketFolder:
    Description: subfolder inside existing s3 bucket, in this Region, to store build artifacts
    Type: String
    Default: dev-blue-artifactbucket

  GitHubRepo:
    Type: String
    Default: dev-blue-nestedstack

  GitHubBranch:
    Type: String
    Default: master

  GitHubToken:
    Type: String
    Default: blank

  GitHubUser:
    Type: String
    Default: shehryarabbasi


Resources:

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CodePipelineServiceRole:
      Type: AWS::IAM::Role
      Properties:
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service:
                      - codepipeline.amazonaws.com
          Path: /
          ManagedPolicyArns:
              - 'arn:aws:iam::aws:policy/AWSCodeCommitFullAccess'
              - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
              - !Ref CFNPipelinePolicy
          Policies:
              - PolicyName: CodePipelineAccess
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                      - Action:
                          - 'iam:PassRole'
                          - 'lambda:InvokeFunction'
                          - 'lambda:ListFunctions'
                          - 'lambda:InvokeAsyc'
                        Effect: Allow
                        Resource: '*'
  CFNPipelinePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
          Description: CloudFormation Pipeline Execution Policy
          Path: "/"
          PolicyDocument:
              Version: '2012-10-17'
              Statement:
                  Effect: Allow
                  Action:
                      - 'cloudformation:CreateStack'
                      - 'cloudformation:DescribeStacks'
                      - 'cloudformation:DeleteStack'
                      - 'cloudformation:UpdateStack'
                      - 'cloudformation:CreateChangeSet'
                      - 'cloudformation:ExecuteChangeSet'
                      - 'cloudformation:DeleteChangeSet'
                      - 'cloudformation:DescribeChangeSet'
                      - 'cloudformation:SetStackPolicy'
                      - 'cloudformation:SetStackPolicy'
                      - 'cloudformation:ValidateTemplate'
                      - 'codebuild:StartBuild'
                      - 'codebuild:BatchGetBuilds'
                  Resource: "*"

  # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
  CodeBuildServiceRole:
      Type: AWS::IAM::Role
      Properties:
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service:
                      - codebuild.amazonaws.com
          Path: /
          Policies:
              - PolicyName: CodeBuildAccess
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                    - Effect: Allow
                      Resource:
                        - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${GitHubRepo}_build'
                        - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${GitHubRepo}_build:*'
                      Action:
                        - 'logs:CreateLogGroup'
                        - 'logs:CreateLogStream'
                        - 'logs:PutLogEvents'
                    - Effect: Allow
                      Resource:
                        - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                      Action:
                        - 's3:GetObject'
                        - 's3:GetObjectVersion'
                        - 's3:PutObject'
  CodeBuildProject:
      Type: AWS::CodeBuild::Project
      Properties:
          Name: !Sub '${GitHubRepo}_build'
          Description: Build project for the Lambda service
          Artifacts:
            Type: CODEPIPELINE
          Environment:
              Type: LINUX_CONTAINER
              ComputeType: BUILD_GENERAL1_SMALL
              Image: aws/codebuild/eb-nodejs-4.4.6-amazonlinux-64:2.1.3
              EnvironmentVariables:
                - Name: BUILD_OUTPUT_BUCKET
                  Value: !Sub ${BuildArtifactsBucket}
          ServiceRole: !GetAtt CodeBuildServiceRole.Arn
          Source:
              Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BuildArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: NestedStack
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: NestedStack
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: NestedStack
              OutputArtifacts:
                - Name: NestedStackZip
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ChangeSetName: Deploy
#                ActionMode: CREATE_UPDATE
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub "${EnvironmentName}-${EnvironmentFlag}-ChangeSet"
                StackName: !Sub "${EnvironmentName}-${EnvironmentFlag}-MasterStack"
                Capabilities: CAPABILITY_IAM
                TemplatePath: NestedStackZip::master.yaml
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                ParameterOverrides: !Sub |
                  {
                    "EnvironmentName": "${EnvironmentName}",
                    "EnvironmentFlag": "${EnvironmentFlag}",
                    "GitHubUser": "${GitHubUser}",
                    "GitHubRepo": "${GitHubRepo}",
                    "GitHubBranch": "${GitHubBranch}"
                  }
              InputArtifacts:
                - Name: NestedStackZip
              RunOrder: 1
            - Name: DeploymentApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub "${EnvironmentName}-${EnvironmentFlag}-MasterStack"
                ChangeSetName: !Sub "${EnvironmentName}-${EnvironmentFlag}-ChangeSet"
              OutputArtifacts:
                - Name: !Sub "${EnvironmentName}-${EnvironmentFlag}-ChangeSet"
              RunOrder: 3



Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}

  BuildArtifactsBucket:
    Value: !Sub ${BuildArtifactsBucket}/${BuildArtifactsBucketFolder}
    Export:
      Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "BuildArtifacts" ]]

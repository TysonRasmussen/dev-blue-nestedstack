Description: >
    This template deploys an Application Load Balancer that exposes our various ECS services.
    We create them it a seperate nested template, so it can be referenced by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    EnvironmentFlag:
        Description: blue or green
        Type: String

    VpcId:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Applicaion Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Applicaion Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Applicaion Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

Resources:

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: !Sub ${EnvironmentName}-${EnvironmentFlag}-ALB
            Subnets: !Ref Subnets
            SecurityGroups:
                - !Ref SecurityGroup
            Tags:
                -
                  Key: Name
                  Value: !Sub ${EnvironmentName}-${EnvironmentFlag}-ALB
                -
                  Key: EnvironmentName
                  Value: !Ref EnvironmentName
                -
                  Key: EnvironmentFlag
                  Value: !Ref EnvironmentFlag

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref TargetGroup

    # We define a default target group here, as this is a mandatory Parameters
    # when creating an Application Load Balancer Listener. This is not used, instead
    # a target group is created per-service in each service template (../services/*)
    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Sub ${EnvironmentName}-${EnvironmentFlag}
            VpcId: !Ref VpcId
            Port: 80
            Protocol: HTTP

Outputs:

    LoadBalancer:
        Description: A reference to the Application Load Balancer
        Value: !Ref LoadBalancer
        Export:
          Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "ALB" ]]

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName
        Export:
          Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "ALBUrl" ]]

    Listener:
        Description: A reference to a port 80 listener
        Value: !Ref LoadBalancerListener
        Export:
          Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "ALBListener80" ]]

    TargetGroup:
        Description: target group
        Value: !Ref TargetGroup
        Export:
          Name: !Join [ "-", [ !Ref EnvironmentName, !Ref EnvironmentFlag, "TargetGroup" ]]
